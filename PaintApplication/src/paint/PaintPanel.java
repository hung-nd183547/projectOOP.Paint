/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paint;

/**
 *
 * @author Tuan Hien
 */



import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import javax.swing.JLabel;

public class PaintPanel extends javax.swing.JPanel implements MouseListener, MouseMotionListener{

    /**
     * Creates new form DrawPanel
    */
//    private int width;
//    private int height;
    Graphics2D g2d, g2; // doi tuong do hoa
    private BufferedImage buff_img; // anh de ve
    private boolean isSaved;
    private Point startPoint,  endPoint;
    private JLabel jCoordinate;
    public PaintPanel() {
        initComponents();
        
    }  
    
    public PaintPanel(int width, int height) {
        initComponents();
//        this.width = width;
//        this.height = height;
        this.setSize(width, height);
        this.setLocation(5, 5);
        buff_img = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        g2d = (Graphics2D) buff_img.createGraphics();
        g2d.setColor(new Color(255, 255, 255));
        g2d.fillRect(0, 0, width, height);
        g2d.dispose();
        this.addMouseListener(this);
        this.addMouseMotionListener(this);
        
    }
    private void doDrawing(Graphics g) {
        g2 = (Graphics2D) g;
        g2.drawImage(buff_img, null, 0, 0);
    }
    public void setImage(BufferedImage img) {
        buff_img = img;
        g2d = (Graphics2D) buff_img.getGraphics();
        isSaved = true;
        this.setSize(buff_img.getWidth(), buff_img.getHeight());
        this.revalidate();
        this.repaint();
    }
    public BufferedImage getImage() {
        return buff_img;
    }
    public void setCoordinate(JLabel jCoordinate) {
        this.jCoordinate = jCoordinate;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        doDrawing(g);
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        
    }

    @Override
    public void mousePressed(MouseEvent e) {
        startPoint = e.getPoint();
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        jCoordinate.setText("");
    }

    @Override
    public void mouseDragged(MouseEvent e) {
        jCoordinate.setText(e.getX() + ", " + e.getY() + " px");
        endPoint = e.getPoint();
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        jCoordinate.setText(e.getX() + ", " + e.getY() + " px");
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
